# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [develop, master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Read git tree hash
        run: echo "##[set-output name=GIT_TREE_HASH;]$(git rev-parse HEAD:)"
        id: git-tree-hash

      - name: Cache result and skip tests if the tree is the same
        id: cache-to-skip
        uses: actions/cache@v2
        with:
          path: package-lock.json
          key: ${{ runner.OS }}-node-${{ steps.git-tree-hash.outputs.GIT_TREE_HASH }}

      - name: Read .nvmrc
        if: steps.cache-to-skip.outputs.cache-hit != 'true'
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Use Node.js
        if: steps.cache-to-skip.outputs.cache-hit != 'true'
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: Cache Node.js modules
        if: steps.cache-to-skip.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        if: steps.cache-to-skip.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run tests
        if: steps.cache-to-skip.outputs.cache-hit != 'true'
        run: npm test

      - name: Run build
        if: steps.cache-to-skip.outputs.cache-hit != 'true'
        env:
          BUNDLE_ANALYZER_TOKEN: ${{ secrets.BUNDLE_ANALYZER_TOKEN }}
        run: ANALYZE=true npm run build
